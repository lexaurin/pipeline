subinclude("///pleasegomod//:build_defs")

fileexport(
    name = "fake",
    srcs = [
        "kubernetes/typed/core/v1/fake/doc.go",
        "kubernetes/typed/core/v1/fake/fake_componentstatus.go",
        "kubernetes/typed/core/v1/fake/fake_configmap.go",
        "kubernetes/typed/core/v1/fake/fake_core_client.go",
        "kubernetes/typed/core/v1/fake/fake_endpoints.go",
        "kubernetes/typed/core/v1/fake/fake_event.go",
        "kubernetes/typed/core/v1/fake/fake_event_expansion.go",
        "kubernetes/typed/core/v1/fake/fake_limitrange.go",
        "kubernetes/typed/core/v1/fake/fake_namespace.go",
        "kubernetes/typed/core/v1/fake/fake_namespace_expansion.go",
        "kubernetes/typed/core/v1/fake/fake_node.go",
        "kubernetes/typed/core/v1/fake/fake_node_expansion.go",
        "kubernetes/typed/core/v1/fake/fake_persistentvolume.go",
        "kubernetes/typed/core/v1/fake/fake_persistentvolumeclaim.go",
        "kubernetes/typed/core/v1/fake/fake_pod.go",
        "kubernetes/typed/core/v1/fake/fake_pod_expansion.go",
        "kubernetes/typed/core/v1/fake/fake_podtemplate.go",
        "kubernetes/typed/core/v1/fake/fake_replicationcontroller.go",
        "kubernetes/typed/core/v1/fake/fake_resourcequota.go",
        "kubernetes/typed/core/v1/fake/fake_secret.go",
        "kubernetes/typed/core/v1/fake/fake_service.go",
        "kubernetes/typed/core/v1/fake/fake_service_expansion.go",
        "kubernetes/typed/core/v1/fake/fake_serviceaccount.go",
    ],
    tag = "go_source",
    deps = ["//third_party/go/k8s.io/client-go:_client-go#download"],
)

go_library(
    name = "fake",
    srcs = [":_fake#go_source"],
    cover = False,
    import_path = "k8s.io/client-go/kubernetes/typed/core/v1/fake",
    visibility = ["PUBLIC"],
    deps = [
        "//third_party/go/k8s.io/api/authentication/v1",
        "//third_party/go/k8s.io/api/autoscaling/v1",
        "//third_party/go/k8s.io/api/core/v1",
        "//third_party/go/k8s.io/api/policy/v1beta1",
        "//third_party/go/k8s.io/apimachinery/pkg/apis/meta/v1",
        "//third_party/go/k8s.io/apimachinery/pkg/fields",
        "//third_party/go/k8s.io/apimachinery/pkg/labels",
        "//third_party/go/k8s.io/apimachinery/pkg/runtime",
        "//third_party/go/k8s.io/apimachinery/pkg/runtime/schema",
        "//third_party/go/k8s.io/apimachinery/pkg/types",
        "//third_party/go/k8s.io/apimachinery/pkg/watch",
        "//third_party/go/k8s.io/client-go/kubernetes/typed/core/v1",
        "//third_party/go/k8s.io/client-go/rest",
        "//third_party/go/k8s.io/client-go/testing",
    ],
)
