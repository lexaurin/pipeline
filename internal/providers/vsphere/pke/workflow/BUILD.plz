go_library(
    name = "workflow",
    srcs = glob(["*.go"], exclude = ["*_test.go"]),
    visibility = ["PUBLIC"],
    deps = [
        "//internal/cluster/clustersetup",
        "//internal/cluster/workflow",
        "//internal/pke",
        "//internal/pke/workflow",
        "//internal/providers/pke/pkeworkflow",
        "//internal/providers/pke/pkeworkflow/pkeworkflowadapter",
        "//internal/providers/vsphere/pke",
        "//internal/secret/secrettype",
        "//pkg/brn",
        "//pkg/cadence",
        "//pkg/cluster",
        "//pkg/k8sclient",
        "//src/cluster",
        "//third_party/go/emperror.dev/errors",
        "//third_party/go/github.com/ghodss/yaml",
        "//third_party/go/github.com/vmware/govmomi",
        "//third_party/go/github.com/vmware/govmomi/find",
        "//third_party/go/github.com/vmware/govmomi/object",
        "//third_party/go/github.com/vmware/govmomi/vim25/progress",
        "//third_party/go/github.com/vmware/govmomi/vim25/soap",
        "//third_party/go/github.com/vmware/govmomi/vim25/types",
        "//third_party/go/go.uber.org/cadence",
        "//third_party/go/go.uber.org/cadence/activity",
        "//third_party/go/go.uber.org/cadence/workflow",
        "//third_party/go/go.uber.org/zap",
        "//third_party/go/k8s.io/apimachinery/pkg/api/errors",
        "//third_party/go/k8s.io/apimachinery/pkg/apis/meta/v1",
    ],
)

go_test(
    name = "test",
    srcs = glob(["*.go"]),
    deps = [
        "//internal/cluster/clustersetup",
        "//internal/cluster/workflow",
        "//internal/pke",
        "//internal/pke/workflow",
        "//internal/providers/pke/pkeworkflow",
        "//internal/providers/pke/pkeworkflow/pkeworkflowadapter",
        "//internal/providers/vsphere/pke",
        "//internal/secret/secrettype",
        "//pkg/brn",
        "//pkg/cadence",
        "//pkg/cluster",
        "//pkg/k8sclient",
        "//src/cluster",
        "//third_party/go/emperror.dev/errors",
        "//third_party/go/github.com/ghodss/yaml",
        "//third_party/go/github.com/stretchr/testify/require",
        "//third_party/go/github.com/vmware/govmomi",
        "//third_party/go/github.com/vmware/govmomi/find",
        "//third_party/go/github.com/vmware/govmomi/object",
        "//third_party/go/github.com/vmware/govmomi/vim25/progress",
        "//third_party/go/github.com/vmware/govmomi/vim25/soap",
        "//third_party/go/github.com/vmware/govmomi/vim25/types",
        "//third_party/go/go.uber.org/cadence",
        "//third_party/go/go.uber.org/cadence/activity",
        "//third_party/go/go.uber.org/cadence/workflow",
        "//third_party/go/go.uber.org/zap",
        "//third_party/go/k8s.io/apimachinery/pkg/api/errors",
        "//third_party/go/k8s.io/apimachinery/pkg/apis/meta/v1",
    ],
)
