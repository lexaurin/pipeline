go_library(
    name = "securityscan",
    srcs = glob(["*.go"], exclude = ["*_test.go"]),
    visibility = ["PUBLIC"],
    deps = [
        "//internal/anchore",
        "//internal/common",
        "//internal/integratedservices",
        "//internal/integratedservices/integratedserviceadapter",
        "//internal/integratedservices/services",
        "//internal/secret/secrettype",
        "//internal/security",
        "//pkg/backoff",
        "//pkg/k8sclient",
        "//pkg/security",
        "//src/auth",
        "//src/secret",
        "//third_party/go/emperror.dev/errors",
        "//third_party/go/github.com/banzaicloud/anchore-image-validator/pkg/apis/security/v1alpha1",
        "//third_party/go/github.com/mitchellh/mapstructure",
        "//third_party/go/k8s.io/apimachinery/pkg/apis/meta/v1",
        "//third_party/go/k8s.io/client-go/kubernetes/scheme",
        "//third_party/go/k8s.io/client-go/kubernetes/typed/core/v1",
    ],
)

go_test(
    name = "test",
    srcs = glob(["*.go"]),
    deps = [
        "//internal/anchore",
        "//internal/common",
        "//internal/integratedservices",
        "//internal/integratedservices/integratedserviceadapter",
        "//internal/integratedservices/services",
        "//internal/secret/secrettype",
        "//internal/security",
        "//pkg/backoff",
        "//pkg/k8sclient",
        "//pkg/security",
        "//src/auth",
        "//src/secret",
        "//third_party/go/emperror.dev/errors",
        "//third_party/go/github.com/banzaicloud/anchore-image-validator/pkg/apis/security/v1alpha1",
        "//third_party/go/github.com/mitchellh/mapstructure",
        "//third_party/go/github.com/stretchr/testify/assert",
        "//third_party/go/github.com/stretchr/testify/mock",
        "//third_party/go/github.com/stretchr/testify/require",
        "//third_party/go/k8s.io/apimachinery/pkg/apis/meta/v1",
        "//third_party/go/k8s.io/client-go/kubernetes/scheme",
        "//third_party/go/k8s.io/client-go/kubernetes/typed/core/v1",
    ],
)
