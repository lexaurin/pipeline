go_library(
    name = "federation",
    srcs = glob(["*.go"], exclude = ["*_test.go"]),
    visibility = ["PUBLIC"],
    deps = [
        "//internal/clustergroup/api",
        "//internal/helm",
        "//internal/integratedservices/services/dns",
        "//pkg/k8sclient",
        "//src/cluster",
        "//src/dns",
        "//third_party/go/emperror.dev/emperror",
        "//third_party/go/emperror.dev/errors",
        "//third_party/go/github.com/gofrs/uuid",
        "//third_party/go/github.com/mitchellh/mapstructure",
        "//third_party/go/github.com/sirupsen/logrus",
        "//third_party/go/k8s.io/api/rbac/v1",
        "//third_party/go/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1",
        "//third_party/go/k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1beta1",
        "//third_party/go/k8s.io/apimachinery/pkg/api/errors",
        "//third_party/go/k8s.io/apimachinery/pkg/apis/meta/v1",
        "//third_party/go/k8s.io/apimachinery/pkg/util/wait",
        "//third_party/go/k8s.io/client-go/kubernetes/typed/rbac/v1",
        "//third_party/go/k8s.io/client-go/rest",
        "//third_party/go/sigs.k8s.io/kubefed/pkg/apis/core/v1beta1",
        "//third_party/go/sigs.k8s.io/kubefed/pkg/client/generic",
        "//third_party/go/sigs.k8s.io/kubefed/pkg/controller/util",
        "//third_party/go/sigs.k8s.io/kubefed/pkg/kubefedctl",
    ],
)

go_test(
    name = "test",
    srcs = glob(["*_test.go"]),
    external = True,
    deps = [
        ":federation",
        "//internal/cmd",
        "//internal/helm",
        "//internal/helm/testing",
        "//internal/testing",
        "//pkg/k8sclient",
    ],
)
