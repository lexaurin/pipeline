go_library(
    name = "cluster",
    srcs = glob(["*.go"], exclude = ["*_test.go"]),
    visibility = ["PUBLIC"],
    deps = [
        "//internal/ark/api",
        "//internal/ark/posthook",
        "//internal/cluster",
        "//internal/cluster/clusteradapter",
        "//internal/cluster/clusteradapter/clustermodel",
        "//internal/cluster/clustersetup",
        "//internal/cluster/distribution/eks",
        "//internal/cluster/distribution/eks/ekscluster",
        "//internal/cluster/distribution/eks/ekscluster/nodepools",
        "//internal/cluster/distribution/eks/eksmodel",
        "//internal/cluster/distribution/eks/eksprovider/workflow",
        "//internal/cluster/distribution/eks/eksworkflow",
        "//internal/cluster/dns",
        "//internal/cluster/kubernetes",
        "//internal/cluster/metrics",
        "//internal/cluster/workflow",
        "//internal/common/commonadapter",
        "//internal/global",
        "//internal/global/globalcluster",
        "//internal/global/globaleks",
        "//internal/hollowtrees",
        "//internal/platform/context",
        "//internal/platform/database",
        "//internal/platform/gin/utils",
        "//internal/providers/alibaba/alibabaadapter",
        "//internal/providers/amazon",
        "//internal/providers/azure",
        "//internal/providers/azure/azureadapter",
        "//internal/providers/azure/pke",
        "//internal/providers/azure/pke/adapter",
        "//internal/providers/azure/pke/driver/commoncluster",
        "//internal/providers/google",
        "//internal/providers/kubernetes/kubernetesadapter",
        "//internal/providers/pke",
        "//internal/providers/pke/pkeworkflow",
        "//internal/providers/vsphere/pke/adapter",
        "//internal/providers/vsphere/pke/driver/commoncluster",
        "//internal/secret/kubesecret",
        "//internal/secret/secrettype",
        "//internal/secret/ssh",
        "//internal/secret/ssh/sshadapter",
        "//internal/secret/ssh/sshdriver",
        "//pkg/any",
        "//pkg/brn",
        "//pkg/cadence",
        "//pkg/cluster",
        "//pkg/cluster/ack",
        "//pkg/cluster/ack/action",
        "//pkg/cluster/aks",
        "//pkg/cluster/gke",
        "//pkg/cluster/pke",
        "//pkg/common",
        "//pkg/ctxutil",
        "//pkg/errors",
        "//pkg/helm",
        "//pkg/jsonstructure",
        "//pkg/k8sclient",
        "//pkg/k8sutil",
        "//pkg/kubernetes/custom/npls",
        "//pkg/problems",
        "//pkg/providers/alibaba",
        "//pkg/providers/amazon",
        "//pkg/providers/azure",
        "//pkg/providers/google",
        "//pkg/providers/oracle/cluster",
        "//pkg/providers/oracle/cluster/manager",
        "//pkg/providers/oracle/model",
        "//pkg/providers/oracle/network",
        "//pkg/providers/oracle/oci",
        "//pkg/providers/oracle/secret",
        "//pkg/sdk/providers/amazon",
        "//pkg/sdk/providers/amazon/cloudformation",
        "//src/auth",
        "//src/dns",
        "//src/helm",
        "//src/model",
        "//src/secret",
        "//src/secret/verify",
        "//src/utils",
        "//third_party/go/emperror.dev/emperror",
        "//third_party/go/emperror.dev/errors",
        "//third_party/go/github.com/Azure/azure-sdk-for-go/services/containerservice/mgmt/2020-02-01/containerservice",
        "//third_party/go/github.com/Azure/azure-sdk-for-go/services/preview/monitor/mgmt/2018-09-01/insights",
        "//third_party/go/github.com/Azure/azure-sdk-for-go/services/resources/mgmt/2018-02-01/resources",
        "//third_party/go/github.com/Azure/go-autorest/autorest/azure",
        "//third_party/go/github.com/Masterminds/semver/v3",
        "//third_party/go/github.com/aliyun/alibaba-cloud-sdk-go/sdk",
        "//third_party/go/github.com/aliyun/alibaba-cloud-sdk-go/sdk/auth/credentials",
        "//third_party/go/github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests",
        "//third_party/go/github.com/aliyun/alibaba-cloud-sdk-go/services/cs",
        "//third_party/go/github.com/aliyun/alibaba-cloud-sdk-go/services/ecs",
        "//third_party/go/github.com/aliyun/alibaba-cloud-sdk-go/services/ess",
        "//third_party/go/github.com/aliyun/alibaba-cloud-sdk-go/services/vpc",
        "//third_party/go/github.com/aws/aws-sdk-go/aws",
        "//third_party/go/github.com/aws/aws-sdk-go/aws/credentials",
        "//third_party/go/github.com/aws/aws-sdk-go/aws/session",
        "//third_party/go/github.com/aws/aws-sdk-go/service/autoscaling",
        "//third_party/go/github.com/aws/aws-sdk-go/service/cloudformation",
        "//third_party/go/github.com/aws/aws-sdk-go/service/eks",
        "//third_party/go/github.com/ghodss/yaml",
        "//third_party/go/github.com/gin-gonic/gin",
        "//third_party/go/github.com/golang/protobuf/ptypes/duration",
        "//third_party/go/github.com/jinzhu/copier",
        "//third_party/go/github.com/jinzhu/gorm",
        "//third_party/go/github.com/jmespath/go-jmespath",
        "//third_party/go/github.com/mitchellh/mapstructure",
        "//third_party/go/github.com/oracle/oci-go-sdk/common",
        "//third_party/go/github.com/oracle/oci-go-sdk/containerengine",
        "//third_party/go/github.com/patrickmn/go-cache",
        "//third_party/go/github.com/pkg/errors",
        "//third_party/go/github.com/prometheus/client_golang/prometheus",
        "//third_party/go/github.com/sirupsen/logrus",
        "//third_party/go/go.uber.org/cadence",
        "//third_party/go/go.uber.org/cadence/activity",
        "//third_party/go/go.uber.org/cadence/client",
        "//third_party/go/go.uber.org/cadence/workflow",
        "//third_party/go/golang.org/x/crypto/ssh",
        "//third_party/go/golang.org/x/net/context",
        "//third_party/go/golang.org/x/oauth2/google",
        "//third_party/go/google.golang.org/api/compute/v1",
        "//third_party/go/google.golang.org/api/container/v1",
        "//third_party/go/google.golang.org/api/googleapi",
        "//third_party/go/k8s.io/api/core/v1",
        "//third_party/go/k8s.io/api/rbac/v1",
        "//third_party/go/k8s.io/api/storage/v1",
        "//third_party/go/k8s.io/apimachinery/pkg/api/errors",
        "//third_party/go/k8s.io/apimachinery/pkg/apis/meta/v1",
        "//third_party/go/k8s.io/apimachinery/pkg/labels",
        "//third_party/go/k8s.io/apimachinery/pkg/types",
        "//third_party/go/k8s.io/apimachinery/pkg/util/net",
        "//third_party/go/k8s.io/apimachinery/pkg/util/proxy",
        "//third_party/go/k8s.io/client-go/dynamic",
        "//third_party/go/k8s.io/client-go/kubernetes",
        "//third_party/go/k8s.io/client-go/plugin/pkg/client/auth/gcp",
        "//third_party/go/k8s.io/client-go/rest",
        "//third_party/go/k8s.io/client-go/tools/clientcmd",
        "//third_party/go/k8s.io/client-go/tools/clientcmd/api",
        "//third_party/go/k8s.io/client-go/tools/clientcmd/api/v1",
        "//third_party/go/k8s.io/client-go/transport",
        "//third_party/go/k8s.io/kubernetes/pkg/apis/storage/util",
        "//third_party/go/logur.dev/adapter/logrus",
        "//third_party/go/logur.dev/logur",
    ],
)

go_test(
    name = "test",
    srcs = glob(
        ["*_test.go"],
        exclude = [
            "common_test.go",
            "ack_test.go",
        ],
    ),
    deps = [
        ":cluster",
        "//internal/cluster/distribution/eks/ekscluster",
        "//internal/global",
        "//internal/providers/google",
        "//pkg/cluster/gke",
        "//pkg/common",
        "//pkg/errors",
        "//third_party/go/google.golang.org/api/container/v1",
    ],
)

go_test(
    name = "external_test",
    srcs = [
        "ack_test.go",
        "common_test.go",
    ],
    external = True,
    deps = [
        ":cluster",
        "//internal/common",
        "//internal/global",
        "//internal/global/nplabels",
        "//internal/providers/alibaba/alibabaadapter",
        "//internal/providers/azure/azureadapter",
        "//internal/providers/kubernetes/kubernetesadapter",
        "//internal/secret/pkesecret",
        "//internal/secret/restricted",
        "//internal/secret/secretadapter",
        "//internal/secret/types",
        "//pkg/cluster",
        "//pkg/cluster/aks",
        "//pkg/cluster/gke",
        "//pkg/cluster/kubernetes",
        "//pkg/errors",
        "//pkg/kubernetes",
        "//src/model",
        "//src/secret",
        "//third_party/go/emperror.dev/emperror",
        "//third_party/go/github.com/banzaicloud/bank-vaults/pkg/sdk/vault",
    ],
)
